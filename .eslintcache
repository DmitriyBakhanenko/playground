[{"C:\\Users\\Сергей\\projects\\playground\\src\\index.js":"1","C:\\Users\\Сергей\\projects\\playground\\src\\App.js":"2","C:\\Users\\Сергей\\projects\\playground\\src\\Accordian.js":"3","C:\\Users\\Сергей\\projects\\playground\\src\\Search.js":"4","C:\\Users\\Сергей\\projects\\playground\\src\\Dropdown.js":"5"},{"size":197,"mtime":1606567119144,"results":"6","hashOfConfig":"7"},{"size":1064,"mtime":1606597543446,"results":"8","hashOfConfig":"7"},{"size":848,"mtime":1606573349454,"results":"9","hashOfConfig":"7"},{"size":1960,"mtime":1606595636428,"results":"10","hashOfConfig":"7"},{"size":1418,"mtime":1606648362357,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ro65r",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\Сергей\\projects\\playground\\src\\index.js",[],"C:\\Users\\Сергей\\projects\\playground\\src\\App.js",[],"C:\\Users\\Сергей\\projects\\playground\\src\\Accordian.js",[],"C:\\Users\\Сергей\\projects\\playground\\src\\Search.js",[],"C:\\Users\\Сергей\\projects\\playground\\src\\Dropdown.js",["23"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function Dropdown({ options, selected, onSelectedChange }) {\r\n  const [visible, setVisible] = useState(false);\r\n  const UiFormRef = useRef();\r\n\r\n  const handleListener = () => {\r\n    const onClickEvent = e => {\r\n      if (!UiFormRef.current.contains(e.target)) setVisible(false);\r\n      return;\r\n    };\r\n\r\n    setVisible(!visible);\r\n    if (visible) document.body.addEventListener('click', onClickEvent);\r\n    else document.body.removeEventListener('click', onClickEvent);\r\n  };\r\n\r\n  const rendOptions = options.map(option => {\r\n    if (option.value === selected.value) return null;\r\n    return (\r\n      <div\r\n        key={option.value}\r\n        className='item'\r\n        onClick={() => onSelectedChange(option)}\r\n      >\r\n        {option.label}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div ref={UiFormRef} className='ui form'>\r\n      <div className='field'>\r\n        <label className='label'>Select a color</label>\r\n        <div\r\n          onClick={handleListener}\r\n          className={`ui selection dropdown ${visible ? 'visible active' : ''}`}\r\n        >\r\n          <i className='dropdown icon'></i>\r\n          <div className='text'>{selected.label}</div>\r\n          <div className={`menu ${visible ? 'visible transition' : ''}`}>\r\n            {rendOptions}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"24","severity":1,"message":"25","line":1,"column":27,"nodeType":"26","messageId":"27","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]